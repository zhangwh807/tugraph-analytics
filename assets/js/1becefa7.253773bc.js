"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[1935],{4889:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>s,metadata:()=>i,toc:()=>c});var d=t(4848),r=t(8453);const s={},o="JDBC Connector Introduction",i={id:"application-development/connector/jdbc",title:"JDBC Connector Introduction",description:"The JDBC Connector is contributed by the community and supports both reading and writing operations.",source:"@site/../docs-en/source/5.application-development/3.connector/4.jdbc.md",sourceDirName:"5.application-development/3.connector",slug:"/application-development/connector/jdbc",permalink:"/tugraph-analytics/en/application-development/connector/jdbc",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Console Connector Introduction",permalink:"/tugraph-analytics/en/application-development/connector/console"},next:{title:"Hive Connector Introduction",permalink:"/tugraph-analytics/en/application-development/connector/hive"}},l={},c=[{value:"Syntax",id:"syntax",level:2},{value:"Options",id:"options",level:2},{value:"Example",id:"example",level:2}];function a(n){const e={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...n.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(e.header,{children:(0,d.jsx)(e.h1,{id:"jdbc-connector-introduction",children:"JDBC Connector Introduction"})}),"\n",(0,d.jsx)(e.p,{children:"The JDBC Connector is contributed by the community and supports both reading and writing operations."}),"\n",(0,d.jsx)(e.h2,{id:"syntax",children:"Syntax"}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-sql",children:"CREATE TABLE jdbc_table (\n  id BIGINT,\n  name VARCHAR,\n  age INT\n) WITH (\n\ttype='jdbc',\n    geaflow.dsl.jdbc.driver = 'org.h2.Driver',\n    geaflow.dsl.jdbc.url = 'jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1',\n    geaflow.dsl.jdbc.username = 'h2_user',\n    geaflow.dsl.jdbc.password = 'h2_pwd',\n    geaflow.dsl.jdbc.table.name = 'source_table'\n);\n"})}),"\n",(0,d.jsx)(e.h2,{id:"options",children:"Options"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(e.table,{children:[(0,d.jsx)(e.thead,{children:(0,d.jsxs)(e.tr,{children:[(0,d.jsx)(e.th,{children:"Key"}),(0,d.jsx)(e.th,{children:"Required"}),(0,d.jsx)(e.th,{children:"Description"})]})}),(0,d.jsxs)(e.tbody,{children:[(0,d.jsxs)(e.tr,{children:[(0,d.jsx)(e.td,{children:"geaflow.dsl.jdbc.driver"}),(0,d.jsx)(e.td,{children:"true"}),(0,d.jsx)(e.td,{children:"The JDBC driver."})]}),(0,d.jsxs)(e.tr,{children:[(0,d.jsx)(e.td,{children:"geaflow.dsl.jdbc.url"}),(0,d.jsx)(e.td,{children:"true"}),(0,d.jsx)(e.td,{children:"The database URL."})]}),(0,d.jsxs)(e.tr,{children:[(0,d.jsx)(e.td,{children:"geaflow.dsl.jdbc.username"}),(0,d.jsx)(e.td,{children:"true"}),(0,d.jsx)(e.td,{children:"The database username."})]}),(0,d.jsxs)(e.tr,{children:[(0,d.jsx)(e.td,{children:"geaflow.dsl.jdbc.password"}),(0,d.jsx)(e.td,{children:"true"}),(0,d.jsx)(e.td,{children:"The database password."})]}),(0,d.jsxs)(e.tr,{children:[(0,d.jsx)(e.td,{children:"geaflow.dsl.jdbc.table.name"}),(0,d.jsx)(e.td,{children:"true"}),(0,d.jsx)(e.td,{children:"The table name."})]}),(0,d.jsxs)(e.tr,{children:[(0,d.jsx)(e.td,{children:"geaflow.dsl.jdbc.partition.num"}),(0,d.jsx)(e.td,{children:"false"}),(0,d.jsx)(e.td,{children:"The JDBC partition number, default 1."})]}),(0,d.jsxs)(e.tr,{children:[(0,d.jsx)(e.td,{children:"geaflow.dsl.jdbc.partition.column"}),(0,d.jsx)(e.td,{children:"false"}),(0,d.jsx)(e.td,{children:"The JDBC partition column. Default value is 'id'."})]}),(0,d.jsxs)(e.tr,{children:[(0,d.jsx)(e.td,{children:"geaflow.dsl.jdbc.partition.lowerbound"}),(0,d.jsx)(e.td,{children:"false"}),(0,d.jsx)(e.td,{children:"The lowerbound of JDBC partition, just used to decide the partition stride, not for filtering the rows in table."})]}),(0,d.jsxs)(e.tr,{children:[(0,d.jsx)(e.td,{children:"geaflow.dsl.jdbc.partition.upperbound"}),(0,d.jsx)(e.td,{children:"false"}),(0,d.jsx)(e.td,{children:"The upperbound of JDBC partition, just used to decide the partition stride, not for filtering the rows in table."})]})]})]}),"\n",(0,d.jsx)(e.h2,{id:"example",children:"Example"}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-sql",children:"set geaflow.dsl.jdbc.driver = 'org.h2.Driver';\nset geaflow.dsl.jdbc.url = 'jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1';\nset geaflow.dsl.jdbc.username = 'h2_user';\nset geaflow.dsl.jdbc.password = 'h2_pwd'; \n\nCREATE TABLE jdbc_source_table (\n  id BIGINT,\n  name VARCHAR,\n  age INT\n) WITH (\n\ttype='jdbc',\n    geaflow.dsl.jdbc.table.name = 'source_table',\n);\n\nCREATE TABLE jdbc_sink_table (\n  id BIGINT,\n  name VARCHAR,\n  age INT\n) WITH (\n\ttype='jdbc',\n    geaflow.dsl.jdbc.table.name = 'sink_table'\n);\n\nINSERT INTO jdbc_sink_table\nSELECT * FROM jdbc_source_table;\n"})})]})}function h(n={}){const{wrapper:e}={...(0,r.R)(),...n.components};return e?(0,d.jsx)(e,{...n,children:(0,d.jsx)(a,{...n})}):a(n)}},8453:(n,e,t)=>{t.d(e,{R:()=>o,x:()=>i});var d=t(6540);const r={},s=d.createContext(r);function o(n){const e=d.useContext(s);return d.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function i(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:o(n.components),d.createElement(s.Provider,{value:e},n.children)}}}]);